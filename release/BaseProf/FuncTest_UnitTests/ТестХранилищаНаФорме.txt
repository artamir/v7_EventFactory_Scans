Перем КаталогТестов, ДопКаталог;
Перем ХранилищеНаФорме, СписокТестов;

Функция ТотЖе(Значение) Возврат Значение; КонецФункции
Функция Сам() Возврат ТотЖе(Контекст); КонецФункции

Процедура Сетап() Экспорт
	КаталогТестов=КаталогИБ()+"Тест22";
	ДопКаталог=КаталогТестов+"\ДопКаталог";
	Если ФС.СуществуетФайл(КаталогТестов)=0 Тогда
		ФС.СоздатьКаталог(КаталогТестов);
	КонецЕсли;
	
	Хранилище=СоздатьОбъект("TestStorage");
	СписокТестов=СоздатьОбъект("ТаблицаЗначений");
	ХранилищеНаФорме=СоздатьОбъект("ХранилищеТестовНаФорме");
	ХранилищеНаФорме.Инит(Хранилище, СписокТестов);
КонецПроцедуры
//--------------------------------------------
	
Процедура Сброс() Экспорт
	РаботаСФайлами=СоздатьОбъект("РаботаСФайлами");
	РаботаСФайлами.ОчиститьКаталог(КаталогТестов);
	//ФС.УдалитьКаталог(КаталогТестов);
КонецПроцедуры
//--------------------------------------------

Процедура ПроверитьРаскраскуСпискаТестов(номСтроки, Цвет, Пиктограмма, Номер)
	СписокТестов.ПолучитьСтрокуПоНомеру(номСтроки);
	Сам().ПроверитьРавенство(СписокТестов.Цвет, Цвет);
	Сам().ПроверитьРавенство(СписокТестов.Пиктограмма, Пиктограмма);
	Сам().ПроверитьРавенство(СписокТестов.Номер, Номер);
КонецПроцедуры
//--------------------------------------------

Функция RGB(R, G, B)
	Возврат R + 256*G + 256*256*B;
КонецФункции    
//--------------------------------------------

Процедура Тест_РаскраскаКаталогов() Экспорт
	ФС.СоздатьКаталог(ДопКаталог);
	
	ХранилищеНаФорме.АнализКаталога(КаталогТестов);
	ПроверитьРаскраскуСпискаТестов(1, "BRUSH["+RGB(255, 255, 220)+"]", 8, "К");
	
	ХранилищеНаФорме.Хранилище.НовыйТест(СписокТестов, "Это тест");
	ХранилищеНаФорме.АнализКаталога(КаталогТестов);
	ПроверитьРаскраскуСпискаТестов(2, "", 12, 1);
КонецПроцедуры
//--------------------------------------------

Процедура Тест_ПереходВВыбранныйКаталог() Экспорт
	ФС.СоздатьКаталог(КаталогТестов+"\Test Folder");
	ФС.СоздатьКаталог(ДопКаталог);
	
	ХранилищеНаФорме.АнализКаталога(КаталогТестов);
	ХранилищеНаФорме.ВыбратьСтроку(2);
	Сам().ПроверитьРавенство(СписокТестов.НазваниеТеста, "ДопКаталог");
	
	ИмяКаталога="";
	ХранилищеНаФорме.ПерейтиВВыбранныйКаталог(ИмяКаталога);
	Сам().ПроверитьРавенство(ИмяКаталога, ДопКаталог);
	
	// Переход в пустом каталоге
	ХранилищеНаФорме.ПерейтиВВыбранныйКаталог(ИмяКаталога);
	Сам().ПроверитьРавенство(ИмяКаталога, ДопКаталог);
	
	ХранилищеНаФорме.ПерейтиВРодительскийКаталог(ИмяКаталога);
	Сам().ПроверитьРавенство(ИмяКаталога, КаталогТестов);
	Сам().ПроверитьРавенство(СписокТестов.НазваниеТеста, "ДопКаталог");;
КонецПроцедуры
//--------------------------------------------

Процедура Тест_СозданиеКаталога() Экспорт
	Сам().ПроверитьРавенство(1, 2);
	//СписокТестов=КонтФормы.СписокТестов_Исходный;
	//ФС.СоздатьКаталог(КаталогТестов+"\TestFolder");
	////дфДобавитьТест("Это тест");
	//Сам().дфВвестиЗначение("ИмяКаталога_Исходный", КаталогТестов);
	//Сам().ПроверитьРавенство(СписокТестов.КоличествоСтрок(), 1);
	//ЭмуляцияВвода("ДопКаталог{Enter}");
	//Сам().дфВыполнитьФормулу("кнСоздатьКаталог1");
	//Сам().ПроверитьРавенство(СписокТестов.КоличествоСтрок(), 2);
	//Сам().ПроверитьРавенство(СписокТестов.ТекущаяСтрока(), 2);
	//СписокТестов.ПолучитьСтрокуПоНомеру(СписокТестов.ТекущаяСтрока());
	//Сам().ПроверитьРавенство(СписокТестов.НазваниеТеста, "ДопКаталог");
КонецПроцедуры
//--------------------------------------------

//Процедура Тест_ПереходВКорневойКаталог() Экспорт
//Перем ИмяКаталога;
//	ХранилищеНаФорме.АнализКаталога("C:\");
//	ХранилищеНаФорме.ВыбратьСтроку(1);
//	ХранилищеНаФорме.ПерейтиВВыбранныйКаталог(ИмяКаталога);
//	Сообщить(ИмяКаталога);
//	ХранилищеНаФорме.ВыбратьСтроку(1);
//	ХранилищеНаФорме.ПерейтиВВыбранныйКаталог(ИмяКаталога);
//	Сам().ПроверитьРавенство(ИмяКаталога, "C:\");
//КонецПроцедуры
////--------------------------------------------
