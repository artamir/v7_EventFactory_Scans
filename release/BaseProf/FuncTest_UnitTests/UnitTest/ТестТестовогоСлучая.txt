Перем Результат;

Функция ТотЖе(Значение) Возврат Значение; КонецФункции
Функция Сам() Возврат ТотЖе(Контекст); КонецФункции

Процедура Сетап() Экспорт
	Результат=СоздатьОбъект("РезультатТеста");
КонецПроцедуры

Процедура тест_ЗапускаМетода() Экспорт 
	Тест = СоздатьОбъект("БылЗапущен"); 
	Тест.Инит("ТестовыйМетод");
	Тест.Запустить(Результат); 
	
	Сам().AssertEquals(Тест.Журнал, "Сетап, Запуск, Сброс");
КонецПроцедуры

Процедура тест_Результата_1() Экспорт
	Тест = СоздатьОбъект("БылЗапущен");
	Тест.Инит("ТестовыйМетод");
	Тест.Запустить(Результат);
	
	Сам().AssertEquals(Результат.ВсегоТестов(), 1);
КонецПроцедуры

Процедура тест_Результата_2() Экспорт
	Тест = СоздатьОбъект("БылЗапущен");
	Тест.Инит("ТестовыйМетод");
	Тест.Запустить(Результат);
	
	Сам().AssertEquals(Результат.УспешныхТестов(), 1);
КонецПроцедуры

Процедура тест_Результата_Печать() Экспорт
	Тест = СоздатьОбъект("БылЗапущен");
	Тест.Инит("ТестовыйМетод");
	Тест.Запустить(Результат);
	
	Сам().AssertEquals(Результат.Итог(), "Запущено тестов: 1, из них упало - 0.");
КонецПроцедуры

Процедура тест_Падения() Экспорт
	Сам().AssertFail(Сам(), "_ВыброситьИскл", "");
КонецПроцедуры

Процедура тест_Падения_2() Экспорт
	Тест = СоздатьОбъект("БылЗапущен");
	Тест.Инит("fail");
	Тест.Запустить(Результат);
	
	Сам().AssertEquals(Результат.УпавшихТестов(), 1);
КонецПроцедуры

Процедура тест_НабораТестов() Экспорт
	Набор=СоздатьОбъект("НаборТестов");
	Набор.Добавить("БылЗапущен", "ТестовыйМетод");
	Набор.Добавить("БылЗапущен", "Сбой");
	Набор.Запустить(Результат);

	//Сам().ПроверитьРавенство(Результат.УпавшихТестов(), 2);
	Сам().AssertEquals(Результат.Итог(), "Запущено тестов: 2, из них упало - 1.");
КонецПроцедуры

