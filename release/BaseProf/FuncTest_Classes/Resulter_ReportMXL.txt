// Resulter_ReportMXL

Функция Сам(Конт) Возврат Конт; КонецФункции

Функция ПолучитьТаблицуЗначенийИзПечатнойТаблицы(Тест, ПолученнаяТаблица) Экспорт
		
	// ТЗ куда перенесем данные
	ТЗ1 = СоздатьОбъект("ТаблицаЗначений"); 

	НеОбрабатыватьКолонки = Тест.ПолучитьУсловие("НеОбрабатыватьКолонки");
	
	КрайняяКолонка = 0; // крайняя колонка (смотрим по ходу)
	ЕслиОтличия    = 0; // флаг
	
	МаксСтрока  = ПолученнаяТаблица.ВысотаТаблицы();
	МаксКолонка = ПолученнаяТаблица.ШиринаТаблицы(); 
	
	Для а=1 по МаксКолонка Цикл
		ТЗ1.НоваяКолонка("Кол"+а);
	КонецЦикла;
	
	// пробежимся по таблицам
	Для ТекСтрока = 1 По МаксСтрока Цикл                                
		
		ТЗ1.НоваяСтрока();

		Для ТекКолонка = 1 По МаксКолонка Цикл  
			
			// получим данные из таблиц
			Ячейка1 = ПолученнаяТаблица.Область(ТекСтрока,ТекКолонка,,);
			
			// запомним крайнюю колонку
			Если КрайняяКолонка < ТекКолонка Тогда
				Если СокрЛП(Ячейка1.Текст) <> "" Тогда
					КрайняяКолонка = ТекКолонка;    
				КонецЕсли;
			КонецЕсли;
			
			// если не нужно обрабатывать колонку - пропустим ее
			ПоискКолонки = "!"+СокрЛП(ТекКолонка)+"!";
			Если Найти(НеОбрабатыватьКолонки,ПоискКолонки) > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ТЗ1.УстановитьЗначение(ТЗ1.НомерСтроки,ТекКолонка,СокрЛП(Ячейка1.Текст));
			
		КонецЦикла; 
		
	КонецЦикла;

	Возврат ТЗ1;
КонецФункции

Процедура ПроверитьТаблицу(Тест, ПолученнаяТаблица) Экспорт
	Если ТипЗначенияСтр(ПолученнаяТаблица) <> "Таблица" Тогда
		лНаименованиеОбработки = Тест.ПолучитьИмяОтчета();                              
		//Сообщить("Форма "+лНаименованиеОбработки+" не создает печатной таблицы, т.е. для тестирования непригодна", "!");
		//Возврат 0;
		Модуль = СоздатьОбъект("ВыполняемыйМодуль");
		Модуль.ВыброситьИскл(, "Форма "+лНаименованиеОбработки+" не создает печатной таблицы, т.е. для тестирования непригодна");
	КонецЕсли;
КонецПроцедуры
                                                 
// виртуальная функция для переопределения в наследниках
Функция ПолучитьПечатнуюТаблицуИзОтчета(Тест) Экспорт
	КонтекстФормы = Сам(Контекст).ПолучитьРезультатТестированияОтчета(Тест);

	Если ТипЗначенияСтр(КонтекстФормы)="Таблица" Тогда
		Возврат КонтекстФормы;
	КонецЕсли;

	// возврат в параметре формы
	Попытка // если в ПриОткрытии отчета стоит Форма.Закрыть()
		лРезультатТеста = КонтекстФормы.Форма.Параметр;
	Исключение
		лРезультатТеста = КонтекстФормы;  // если в ПриОткрытии отчета стоит СтатусВозврата(0), параметр можно вернуть только списком или таблицей
	КонецПопытки;
	
	Если ТипЗначенияСтр(лРезультатТеста) = "СписокЗначений" Тогда
		ПолученнаяТаблица = лРезультатТеста.Получить("ПолученныйРезультат");
	Иначе
		ПолученнаяТаблица = лРезультатТеста;
	КонецЕсли;

	Возврат ПолученнаяТаблица;
КонецФункции

Функция Выполнить(Тест) Экспорт
	ПолученнаяТаблица = Сам(Контекст).ПолучитьПечатнуюТаблицуИзОтчета(Тест);

	Сам(Контекст).ПроверитьТаблицу(Тест, ПолученнаяТаблица);

	Возврат Сам(Контекст).ПолучитьТаблицуЗначенийИзПечатнойТаблицы(Тест, ПолученнаяТаблица);	
КонецФункции