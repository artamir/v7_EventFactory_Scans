Перем _ВремяНачала, _ВремяЗавершения;
Перем _Ошибки;
Перем _ВсегоТестов, _УспешныхТестов, _УпавшихТестов;

Процедура Конструктор()
	_Ошибки=СоздатьОбъект("СписокЗначений");
	_ВсегоТестов = 0;
	_УспешныхТестов = 0;
	_УпавшихТестов = 0;
КонецПроцедуры

Функция ВсегоТестов() Экспорт
	Возврат _ВсегоТестов;
КонецФункции

Функция УспешныхТестов() Экспорт
	Возврат _УспешныхТестов;
КонецФункции

Функция УпавшихТестов() Экспорт
	Возврат _УпавшихТестов;
КонецФункции

Процедура ОтметитьВремяЗапуска() Экспорт
	Если ПустоеЗначение(_ВремяНачала)=1 Тогда
		_ВремяНачала = _GetPerformanceCounter();
	КонецЕсли;
КонецПроцедуры

Функция ВремяВыполнения() Экспорт
	Возврат _ВремяЗавершения-_ВремяНачала;
КонецФункции

Процедура ДобавитьПадение(ОписаниеТеста, Ошибка, ОбъектИсключения) Экспорт
	_ВсегоТестов = _ВсегоТестов + 1;
	_УпавшихТестов = _УпавшихТестов + 1;
	Описание = Ошибка + РазделительСтрок + ОбъектИсключения;
	_Ошибки.ДобавитьЗначение(Описание, ОписаниеТеста);
	_ВремяЗавершения=_GetPerformanceCounter();
КонецПроцедуры

Процедура ДобавитьУспех() Экспорт
	_ВсегоТестов = _ВсегоТестов + 1;
	_УспешныхТестов = _УспешныхТестов + 1;
	_ВремяЗавершения=_GetPerformanceCounter();
КонецПроцедуры

Функция Итог() Экспорт
	Возврат "Запущено тестов: "+ВсегоТестов()+", из них упало - "+УпавшихТестов()+".";
КонецФункции

Процедура Печать() Экспорт
	Перем ОписаниеТеста;

	Для ъ=1 По УпавшихТестов() Цикл
		Ошибка = _Ошибки.ПолучитьЗначение(ъ, ОписаниеТеста);
		Сообщить(""+ъ+". Упал тест: "+ОписаниеТеста);
		Сообщить(Ошибка);
	КонецЦикла;
	
	Сообщить(Итог());
	Сообщить("Общее время выполнения: "+Формат(ВремяВыполнения()/1000, "Ч6.2")+" сек.");
КонецПроцедуры
